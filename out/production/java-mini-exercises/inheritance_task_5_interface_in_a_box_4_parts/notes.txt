//How polymorphism and interface worktogether to give a concise and non repitative code:
    using interface class as type in parameters or for each loop creates
    less headache interms of dealing with obj types, you dont need to know which specific type
    is, only that it is Animal i.e
    The same method name sound() is used, but it does different things depending on whether the
    object is a Dog or a Cat.

        interface Animal {
            void makeSound();  // All Animals must make a sound
        }

        class Dog implements Animal {
            @Override
            public void makeSound() {
                System.out.println("Woof!");
            }
        }

        class Cat implements Animal {
            @Override
            public void makeSound() {
                System.out.println("Meow!");
            }
        }

        Now, we have a method that uses polymorphism:

        public void animalSound(Animal animal) {
            animal.makeSound();  // Will call the appropriate makeSound() method
        }

        Main file:
        animalSound(new Dog());  // Output: Woof!
        animalSound(new Cat());  // Output: Meow!